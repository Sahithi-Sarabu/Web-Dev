{"version":3,"sources":["services.js","Login.jsx","AddToDo.jsx","Filter.jsx","TodoDisplay.jsx","Logout.jsx","ThemeContext.jsx","Todo.jsx","App.jsx","serviceWorker.js","index.js"],"names":["fetchAllTodos","username","fetch","method","catch","error","json","then","err","Promise","reject","message","response","ok","fetchTask","taskId","fetchUpdateTask","task","headers","body","JSON","stringify","Login","onLogin","setError","useState","setUsername","useEffect","className","onChange","e","target","value","placeholder","onClick","fetchLogin","userInfo","data","AddToDo","onSend","userState","setUserState","setTheme","todo","setTodo","fetchTodo","done","todos","isLoggedIn","Filter","onFilter","onSort","onRefresh","type","id","name","filterTask","previousElementSibling","TodoDisplay","setTodos","newtodo","filterState","setFilterState","sortState","setSortState","changeStatus","dataset","tasks","Object","values","updateText","text","updated","update","deleteText","todosList","sort","task1","task2","localeCompare","filter","map","key","data-id","defaultValue","Logout","onLogout","ThemeContext","React","createContext","Todo","useContext","getTheme","selected","theme","TodoList","newTheme","updateTheme","App","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.6aa9437d.chunk.js","sourcesContent":["export const fetchLoginStatus = () =>{\r\n    return fetch('/session',{\r\n        method:'GET',\r\n      })\r\n      .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n      .then( (response) =>{\r\n        if(!response.ok){\r\n          return response.json().then(err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport const fetchLogin = (username) => {\r\n    return fetch('/session',{\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: username }),\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) => {\r\n        if(!response.ok){\r\n            return response.json().then( err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport const fetchLogout = () => {\r\n    return fetch('/session', {\r\n        method: 'DELETE',\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) => {\r\n        if(!response.ok){\r\n            return Promise.reject({ error: 'Error logging out'})\r\n        }\r\n        return;\r\n    });\r\n}\r\n\r\nexport const fetchTodo = (task, username) => {\r\n    return fetch(`/tasks/${username}`,{\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({task: task})\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) => {\r\n        if(!response.ok){\r\n            return response.json().then(err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport const fetchAllTodos = (username) => {\r\n    return fetch(`/tasks/${username}`, {\r\n        method: 'GET'\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) => {\r\n        if(!response.ok){\r\n            return response.json().then(err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport const fetchTask = (taskId, username) => {\r\n    return fetch(`/tasks/${username}/${taskId}`,{\r\n        method: 'GET'\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) =>{\r\n        if(!response.ok){\r\n            return response.json().then(err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const fetchUpdateTask = (username, task) => {\r\n    return fetch(`/tasks/${username}/${task.taskId}`, {\r\n        method:'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({task: task})\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) =>{\r\n        if(!response.ok){\r\n            return response.json().then(err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const deleteTask = (username, taskId) => {\r\n    return fetch(`/tasks/${username}/${taskId}`, {\r\n        method: 'DELETE'\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) =>{\r\n        if(!response.ok){\r\n            return response.json().then(err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const fetchTheme = (username) => {\r\n    return fetch(`/theme/${username}`,{\r\n        method:'GET'\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) =>{\r\n        if(!response.ok){\r\n            return response.json().then(err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const updateTheme = (username, theme) => {\r\n    return fetch(`/theme/${username}`,{\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({theme: theme})\r\n    })\r\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\r\n    .then( (response) =>{\r\n        if(!response.ok){\r\n            return response.json().then(err => Promise.reject(err));\r\n        }\r\n        return response.json();\r\n    })\r\n}","import React, {useEffect, useState } from 'react';\r\nimport { fetchLogin } from './services';\r\n\r\nconst Login = ({ onLogin, setError }) => {\r\n    const [username, setUsername] = useState('');\r\n\r\n    const performLogin = () =>{\r\n        const name = username;\r\n        fetchLogin(name)\r\n        .then( userInfo => {\r\n            onLogin(userInfo.data.username);\r\n        })\r\n        .catch( (err) =>{\r\n            setError(err.message);\r\n        });\r\n    };\r\n\r\n    useEffect( () => {\r\n        setError('');\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <input className=\"user-name\" onChange={ (e) => setUsername(e.target.value)} placeholder=\"Enter name\"/>\r\n            <button className=\"add-user\" onClick={ performLogin }>Login</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useState} from 'react';\r\nimport {fetchTodo, fetchAllTodos} from './services';\r\n\r\nconst AddToDo = ({onSend, userState, setUserState, setError, setTheme}) => {\r\n    const [todo, setTodo] = useState('');\r\n\r\n    const sendTodo = (e) =>{\r\n        if(todo){\r\n            const task = {task: todo, done: false};\r\n            fetchTodo(task , userState.username)\r\n            .then( () =>{\r\n                setTodo('');\r\n                fetchAllTodos(userState.username)\r\n                .then( (todos) => {\r\n                    onSend(todos.data);\r\n                    setError('');\r\n                }) \r\n            })\r\n            .catch( err => {\r\n                setError(err.message);\r\n                if(err.message === 'no valid session' || err.message === 'action not permitted'){\r\n                    setUserState({\r\n                        isLoggedIn: false\r\n                    });\r\n                    setTheme('light');\r\n                    setError('Login to access');\r\n                }\r\n            })\r\n        }\r\n        if(!todo){\r\n            setError('Message cannot be Empty');\r\n        }\r\n    }\r\n\r\n    const onInput = (e) =>{\r\n        setTodo(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"to-send\">\r\n            <input className=\"new-todo\" value={ todo } onChange={ onInput } placeholder=\"Enter Task Name\"/>\r\n            <button className=\"add\" onClick={ sendTodo }>Send</button>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AddToDo;","import React from 'react';\r\n\r\nconst Filter = ({onFilter, onSort, onRefresh}) =>{\r\n\r\n    const filtertasks = (e) => {\r\n        const filterTask  = e.target.value;\r\n        onFilter(filterTask);\r\n    } \r\n\r\n    const sortAsc = (e) => {\r\n        onSort(e.target.value);\r\n    }\r\n\r\n    const sortDesc = (e) => {\r\n        onSort(e.target.value);\r\n    }\r\n\r\n    const sortDone = (e) => {\r\n        onSort(e.target.value);\r\n    }\r\n\r\n    const sortNotDone = (e) => {\r\n        onSort(e.target.value);\r\n    }\r\n\r\n    const send = (e) => {\r\n        e.target.previousElementSibling.value = 'All';\r\n        onSort('');\r\n        onFilter('All');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"filters\">\r\n            <input className=\"radio\" type=\"radio\" id=\"radio\" name=\"task\" onClick={sortAsc} value=\"Sort Ascending Name\"/>\r\n            <label className=\"radio\">Sort Ascending Name</label>\r\n            <input className=\"radio\" type= \"radio\" id=\"radio\" name=\"task\" onClick={sortDesc} value=\"Sort Descending Name\"/>\r\n            <label className=\"radio\">Sort Descending Name</label>\r\n            <input className=\"radio\" type=\"radio\" id=\"radio\" name=\"task\" onClick= {sortDone} value=\"Sort By Done\"/>\r\n            <label className=\"radio\" >Sort By Done</label>\r\n            <input className=\"radio\" type=\"radio\" id=\"radio\" name=\"task\" onClick={sortNotDone} value=\"Sort By Not Done\"/>\r\n            <label className=\"radio\" >Sort By Not Done </label>\r\n            <label className=\"filter\" >Show</label>\r\n            <select className=\"filter\" onChange={ filtertasks }>\r\n                <option>All</option>\r\n                <option>Done</option>\r\n                <option>Not Done</option>\r\n            </select>\r\n            <button className=\"refresh\" onClick={send}>Refresh</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Filter;","import React, { useState } from 'react';\r\nimport {fetchTask, fetchUpdateTask, fetchAllTodos, deleteTask} from './services';\r\nimport Filter from './Filter'\r\n\r\n\r\nconst TodoDisplay = ({todos,  userState , setTodos, setError, setUserState, setTheme}) =>{\r\n    const [newtodo, setTodo] = useState('');\r\n    const [filterState, setFilterState] = useState('All');\r\n    const [sortState, setSortState] = useState('');\r\n\r\n    const changeStatus = (e) => {\r\n        const id = e.target.dataset.id;\r\n        fetchTask(id, userState.username)\r\n        .then( task  => {\r\n            task.data.done = !task.data.done;\r\n            const todo = {...task.data}\r\n            fetchUpdateTask(userState.username, todo)\r\n            .then( () =>{\r\n                fetchAllTodos(userState.username)\r\n                .then( tasks => {\r\n                    setTodos(Object.values(tasks.data));\r\n                })\r\n            })\r\n        })\r\n        .catch( err => {\r\n            setError(err.message);\r\n            if(err.message =='no valid session' || err.message == 'action not permitted'){\r\n                setUserState({\r\n                    isLoggedIn: false\r\n                });\r\n                setTheme('light');\r\n                setError('Login to access');\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateText = (e) => {\r\n        const id = e.target.dataset.id;\r\n        const text = newtodo;\r\n        fetchTask(id, userState.username)\r\n        .then( task  => {\r\n            const tasks = task.data\r\n            const updated = {...tasks, task:text}\r\n            fetchUpdateTask(userState.username, updated)\r\n            .then( () => {\r\n                fetchAllTodos(userState.username)\r\n                .then( tasks => {\r\n                    setTodos(Object.values(tasks.data));\r\n                })\r\n            })\r\n        })\r\n        .catch( err => {\r\n            setError(err.message);\r\n            if(err.message =='no valid session' || err.message == 'action not permitted'){\r\n                setUserState({\r\n                    isLoggedIn: false\r\n                });\r\n                setTheme('light');\r\n                setError('Login to access');\r\n            }\r\n        })\r\n    }\r\n    const update = (e) => {\r\n        setTodo(e.target.value);\r\n    }\r\n\r\n    const deleteText =  (e) => {\r\n        const id = e.target.dataset.id;\r\n        deleteTask(userState.username, id)\r\n        .then( () => {\r\n            fetchAllTodos(userState.username)\r\n            .then( tasks => {\r\n                setTodos(Object.values(tasks.data));\r\n            })\r\n        })\r\n        .catch( err => {\r\n            setError(err.message);\r\n            if(err.message =='no valid session' || err.message == 'action not permitted'){\r\n                setUserState({\r\n                    isLoggedIn: false\r\n                });\r\n                setTheme('light');\r\n                setError('Login to access');\r\n            }\r\n        })\r\n    }\r\n\r\n    const filtered = (filter) =>{\r\n        setFilterState(filter);\r\n    }\r\n\r\n    const sorted = (sort) => {\r\n        setSortState(sort);\r\n    }\r\n    \r\n    function isFiltered(task){\r\n        if(filterState === 'Done'){\r\n            return task.done == true;\r\n        }else if(filterState === 'Not Done'){\r\n            return task.done == false;\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function isSorted(task1, task2){\r\n        if(!sortState){\r\n            return;\r\n        }\r\n        if(sortState === 'Sort Ascending Name'){\r\n            return task1.task.localeCompare(task2.task);\r\n        }\r\n        if(sortState === 'Sort Descending Name'){\r\n            return task2.task.localeCompare(task1.task);\r\n        }\r\n        if(sortState === 'Sort By Done'){\r\n            return task2.done - task1.done;\r\n        }\r\n        if(sortState === 'Sort By Not Done'){\r\n            return task1.done - task2.done;\r\n        }\r\n    }\r\n\r\n    const todosList = [...todos]\r\n    .sort(isSorted)\r\n    .filter(isFiltered).map( (todo) =>\r\n        <li key={todo.taskId}>\r\n        <div className=\"task-info\">\r\n            <div className=\"done\">\r\n                <button className=\"done\" data-id={todo.taskId} onClick={changeStatus}>{todo.done ? 'Done' : 'Not Done'}</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <input className= \"newTask\" onChange={ update } defaultValue={todo.task}/>\r\n                <button className=\"update\" data-id={todo.taskId} onClick={updateText}>Update</button>\r\n            </div>\r\n          <button className=\"delete\" data-id={todo.taskId} onClick={deleteText}>Delete</button>\r\n        </div>\r\n        </li>\r\n    );\r\n\r\n    return (\r\n        <div className=\"todo-content\">\r\n            <Filter onFilter={filtered} onSort={sorted}></Filter>\r\n            <ul className=\"todos\">{ todosList }</ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoDisplay;","import React from 'react';\r\nimport { fetchLogout } from './services';\r\n\r\nconst Logout = ({ onLogout, setError }) =>{\r\n\r\n    const performLogout = () =>{\r\n        fetchLogout()\r\n        .then( () => onLogout() )\r\n        .catch( (err) =>{  \r\n            setError(err.error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"logout\">\r\n            <button className=\"logout-button\" onClick={ performLogout }>Logout</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logout;","import React from 'react';\r\n\r\nconst ThemeContext = React.createContext('colorful');\r\n\r\nexport default ThemeContext;","import React, {useState, useEffect, useContext} from 'react';\r\nimport AddToDo from './AddToDo';\r\nimport TodoDisplay from './TodoDisplay'\r\nimport {fetchAllTodos, fetchTheme, updateTheme } from './services';\r\nimport Logout from './Logout';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nconst Todo = ({ userState, setUserState, setError }) => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n    const getTodos = () =>{\r\n        fetchAllTodos(userState.username)\r\n        .then( TodoList =>{\r\n            setTodos(Object.values(TodoList.data));\r\n        })\r\n        .catch( err =>{\r\n            setError(err.message);\r\n        });\r\n    };\r\n\r\n    const getTheme = () => {\r\n        fetchTheme(userState.username)\r\n        .then( userInfo =>{\r\n            const selected = userInfo.data.theme;\r\n            if(selected === 'light' || selected === 'dark'){\r\n                setTheme(selected);\r\n            }else{\r\n                setTheme('colorful');\r\n            }\r\n        })\r\n        .catch( err =>{\r\n            setError(err.message);\r\n            if(err.message =='no valid session' || err.message == 'action not permitted'){\r\n                setUserState({\r\n                    isLoggedIn: false\r\n                });\r\n                setTheme('light');\r\n            }\r\n        });\r\n    }\r\n\r\n    const logout = ()=>{\r\n        setUserState({\r\n            isLoggedIn: false\r\n        });\r\n        setTheme('light');\r\n    };\r\n\r\n    useEffect( () => {\r\n        getTodos();\r\n        setError('');\r\n        getTheme();\r\n    }, []);\r\n\r\n    const send = ( todosList) =>{\r\n        setTodos(Object.values(todosList));\r\n    }\r\n\r\n    const changeTheme = (e) => {\r\n        const newTheme = e.target.value;\r\n        setTheme(newTheme);\r\n        updateTheme(userState.username, newTheme)\r\n        .catch( err =>{\r\n            setError(err.message);\r\n            if(err.message =='no valid session' || err.message == 'action not permitted'){\r\n                setUserState({\r\n                    isLoggedIn: false\r\n                });\r\n                setTheme('light');\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <h2>To be Done</h2>\r\n            <Logout onLogout={ logout } setError={ setError }/>\r\n            <div className=\"theme\">\r\n                <label className=\"themes\">Select Theme </label>\r\n                <select className=\"themes\" onChange={changeTheme}>\r\n                    <option>colorful</option>\r\n                    <option>light</option>\r\n                    <option>dark</option>\r\n                </select>\r\n            </div>\r\n            <AddToDo onSend={ send } userState={userState} setUserState= {setUserState} setError= {setError} setTheme={setTheme}/>\r\n            <TodoDisplay todos={ todos } userState={userState} setTodos={setTodos} setError= {setError} setUserState={setUserState} setTheme={setTheme}/> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React, {useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { fetchLoginStatus } from './services';\r\nimport Login from './Login';\r\nimport Todo from './Todo';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nconst App = () => {\r\n  const [userState, setUserState] = useState({ isLoggedIn: false});\r\n  const [error, setError] = useState('');\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  useEffect( () => {\r\n    fetchLoginStatus()\r\n    .then( (userInfo) => {\r\n       setUserState({ \r\n        isLoggedIn: true,\r\n        username: userInfo.data.username\r\n      })\r\n    })\r\n  }, []);\r\n\r\n  const login = (username) => {\r\n     setUserState({ \r\n       isLoggedIn: true,\r\n       username\r\n     });\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value = { [theme, setTheme] }>\r\n      <div className= {theme} >\r\n        {userState.isLoggedIn ? <Todo userState={userState} setUserState= {setUserState} setError={setError} /> : <Login onLogin={ login } setError={ setError }/> }\r\n        <p className =\"status\">{ error }</p>\r\n      </div>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}